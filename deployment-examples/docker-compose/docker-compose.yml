services:
  # the frontend container
  web:
    platform: linux/amd64
    image: codegouvfr/catalogi-web:latest # you should use a specific version here. See here : https://hub.docker.com/r/codegouvfr/catalogi-web/tags
    depends_on:
      - api
    restart: unless-stopped
    env_file: .env

  # the api that the frontend will call
  api:
    platform: linux/amd64
    image: codegouvfr/catalogi-api:latest # you should use a specific version here. See here : https://hub.docker.com/r/codegouvfr/catalogi-api/tags
    depends_on:
      - postgres
    env_file: .env
    restart: unless-stopped
    command: yarn start
    volumes:
      - ./customization:/app/api/dist/src/customization

  # this is the background task that will update the database every 4 hours
  update:
    platform: linux/amd64
    image: codegouvfr/catalogi-api:latest # you should use a specific version here. See here : https://hub.docker.com/r/codegouvfr/catalogi-api/tags
    depends_on:
      - api
      - postgres
    env_file: .env
    restart: always
    # runs every 4 hours (240 minutes)
    command: yarn update-then-wait 240

  # this is nginx managing the proxy (sending /api requests to the api container, the rest to the web container)
  nginx:
    image: nginx:alpine
    ports:
      - "8090:80"
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
    depends_on:
      - api
      - web
    restart: unless-stopped

  # optional, as your DB could be hosted elsewhere
  postgres:
    image: postgres:16
    shm_size: 256m
    environment:
      POSTGRES_LOG_STATEMENTS: all
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./docker-data:/var/lib/postgresql/data
    restart: unless-stopped

  # optional, gives a UI (an old school one yet useful) to access the data in the DB
  adminer:
    image: adminer
    ports:
      - "8091:8080"
    restart: unless-stopped
