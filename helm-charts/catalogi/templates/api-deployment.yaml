apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "catalogi.fullname" . }}-api
  labels:
    {{- include "catalogi.api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "catalogi.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "catalogi.api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "catalogi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ include "catalogi.imageTag" .Values.api.image }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command: ["yarn", "start"]
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret | default (printf "%s-database" (include "catalogi.fullname" .)) }}
                  key: database-url
            - name: API_PORT
              value: "3000"
            - name: EXTERNAL_SOFTWARE_DATA_ORIGIN
              value: "wikidata"
          {{- if .Values.customization.enabled }}
          volumeMounts:
            - name: customization
              mountPath: /app/api/dist/src/customization
              readOnly: true
          {{- end }}
      {{- if .Values.customization.enabled }}
      volumes:
        - name: customization
          configMap:
            name: {{ include "catalogi.fullname" . }}-customization
      {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}