apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "catalogi.fullname" . }}-api
  labels:
    {{- include "catalogi.api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "catalogi.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "catalogi.api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "catalogi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z -w 2 {{ include "catalogi.fullname" . }}-postgresql 5432; do echo "waiting for postgres..."; sleep 2; done;']
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ include "catalogi.imageTag" (dict "image" .Values.api.image "root" .) }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command: ["yarn", "start"]
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /public/healthcheck
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /public/healthcheck
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          env:
{{- include "catalogi.apiEnvs" . | nindent 12 }}
          {{- if .Values.customization.enabled }}
          volumeMounts:
            - name: customization
              mountPath: /app/api/dist/src/customization/ui-config.json
              subPath: ui-config.json
              readOnly: true
            {{- if .Values.customization.translations }}
            {{- range $lang, $content := .Values.customization.translations }}
            - name: customization
              mountPath: /app/api/dist/src/customization/translations/{{ $lang }}.json
              subPath: translations_{{ $lang }}.json
              readOnly: true
            {{- end }}
            {{- end }}
          {{- end }}
      {{- if .Values.customization.enabled }}
      volumes:
        - name: customization
          configMap:
            name: {{ include "catalogi.fullname" . }}-customization
      {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}