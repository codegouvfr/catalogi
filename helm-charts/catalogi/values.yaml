# Default values for catalogi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- A list of secrets to be used for pulling images from a private registry
imagePullSecrets: []

# -- Service Account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Configuration for the 'web' frontend deployment
web:
  replicaCount: 1
  image:
    repository: codegouvfr/catalogi-web
    tag: "latest" # Defaults to .Chart.AppVersion
    pullPolicy: IfNotPresent
  # -- Pod security context (runs commands as a non-root user)
  podSecurityContext: {}
  #  runAsUser: 1001
  #  fsGroup: 1001
  # -- Container security context (hardening options)
  securityContext: {}
  #  allowPrivilegeEscalation: false
  #  readOnlyRootFilesystem: true
  #  capabilities:
  #    drop:
  #      - ALL
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 200m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 64Mi
  # -- Advanced scheduling options
  nodeSelector: {}
  tolerations: []
  affinity: {}

# -- Configuration for the 'api' backend deployment
api:
  replicaCount: 1
  image:
    repository: codegouvfr/catalogi-api
    tag: "latest" # Defaults to .Chart.AppVersion
    pullPolicy: IfNotPresent
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  env:
    OIDC_ISSUER_URI: https://auth.code.gouv.fr/auth/realms/codegouv
    OIDC_CLIENT_ID: sill

# -- Configuration for the 'update' background job
update:
  schedule: "0 */4 * * *"
  image:
    repository: codegouvfr/catalogi-api
    tag: "latest" # Defaults to .Chart.AppVersion
    pullPolicy: IfNotPresent
  podSecurityContext: {}
  securityContext: {}
  resources: {}

# -- Ingress configuration. This replaces the nginx container.
ingress:
  enabled: true
  className: "" # For Kubernetes v1.18+, you should specify an IngressClassName e.g., "nginx"
  annotations: {}
  #  kubernetes.io/tls-acme: "true"
  hosts:
    - host: catalogi.local # IMPORTANT: Change this to your actual domain
      paths:
        - path: /
          pathType: ImplementationSpecific
          service:
            name: web
            port: 80
        - path: /api
          pathType: ImplementationSpecific
          service:
            name: api
            port: 3000
  tls: []
  #  - secretName: catalogi-tls
  #    hosts:
  #      - catalogi.local

# -- Database configuration
database:
  user: "catalogi_user"
  db: "catalogi_db"
  password: "change-this-in-production"
  existingSecret: ""
  externalHost: ""

# -- PostgreSQL sub-chart configuration.
postgresql:
  enabled: true
  auth:
    username: "catalogi_user"
    database: "catalogi_db"
    password: "change-this-in-production"
  primary:
    persistence:
      enabled: true
      size: 8Gi

# -- Customization for the API (replaces the volume mount)
customization:
  enabled: true
  uiConfig: |-
    {
      "header": {
          "link": {
              "linkProps": {
                  "href": "https://code.gouv.fr"
              },
              "text": "Code Gouv"
          },
          "menu": {
              "welcome": {
                  "enabled": true
              },
              "catalog": {
                  "enabled": true
              },
              "addSoftware": {
                  "enabled": true
              },
              "about": {
                  "enabled": true
              },
              "contribute": {
                  "enabled": true,
                  "href": "mailto:floss@numerique.gouv.fr?subject=Demande d'accompagnement"
              }
          }
      },
      "home": {
          "softwareSelection": {
              "enabled": true
          },
          "theSillInAFewWordsParagraphLinks": [
              "https://fr.wikipedia.org/wiki/Logiciel_libre",
              "https://www.legifrance.gouv.fr/jorf/article_jo/JORFARTI000033203039",
              "https://code.gouv.fr/sill/readme",
              "https://code.gouv.fr/fr/doc/licences-libres-dinum"
          ],
          "searchBar": {
              "enabled": false
          },
          "statistics": {
              "categories": ["softwareCount", "registeredUserCount", "agentReferentCount", "organizationCount"]
          },
          "usecases": {
              "declareReferent": {
                  "enabled": true,
                  "labelLinks": [],
                  "buttonEnabled": true,
                  "buttonLink": ""
              },
              "editSoftware": {
                  "enabled": true,
                  "labelLinks": [],
                  "buttonEnabled": true,
                  "buttonLink": ""
              },
              "addSoftwareOrService": {
                  "enabled": true,
                  "labelLinks": [],
                  "buttonEnabled": true,
                  "buttonLink": ""
              }
          },
          "quickAccess": {
              "enabled": false
          }
      },
      "softwareDetails": {
          "authorCard": false,
          "defaultLogo": true,
          "details": {
              "enabled": true,
              "fields": {
                  "registerDate": true,
                  "minimalVersionRequired": true,
                  "softwareCurrentVersion": true,
                  "softwareCurrentVersionDate": true,
                  "license": true
              }
          },
          "prerogatives": {
              "enabled": true
          },
          "metadata": {
              "enabled": true,
              "fields": {
                  "keywords": true,
                  "programmingLanguages": true,
                  "applicationCategories": true,
                  "softwareType": true
              }
          },
          "links": {
              "enabled": true
          },
          "userActions": {
              "enabled": true
          }
      },
      "catalog": {
          "defaultLogo": true,
          "search": {
              "options": {
                  "organisation": true,
                  "applicationCategories": true,
                  "softwareType": true,
                  "prerogatives": true,
                  "programmingLanguages": false
              }
          },
          "sortOptions": {
              "referent_count": true,
              "user_count": true,
              "added_time": true,
              "update_time": true,
              "latest_version_publication_date": true,
              "user_count_ASC": true,
              "referent_count_ASC": true
          },
          "cardOptions": {
              "referentCount": true,
              "userCase": true
          }
      },
      "footer": {
          "domains": ["info.gouv.fr", "service-public.fr", "legifrance.gouv.fr", "data.gouv.fr"]
      }
    }
  translations:
    en: |-
      {
        "$schema": "https://raw.githubusercontent.com/codegouvfr/sill/refs/heads/main/api/src/rpc/translations/schema.json",
        "home": {
          "title": "Software Catalog configured with Helm"
        }
      }
    fr: |-
      {
        "$schema": "https://raw.githubusercontent.com/codegouvfr/sill/refs/heads/main/api/src/rpc/translations/schema.json",
        "home": {
          "title": "Catalogue de Logiciels configur√© avec Helm"
        }
      }

# -- Configuration for Adminer (optional database UI)
adminer:
  enabled: false
  image:
    repository: adminer
    tag: "latest"
